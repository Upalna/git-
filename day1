4.	实战(创建版本库)
4.1.	创建版本库
1.创建目录（用作本地版本库）：D:\DevRepository\GITRepository\oa
注：oa表示办公自动化项目名称
当前目录打开Git Bash窗口，初始化仓库：git init
4.2.	查看当前目录,产生.git隐藏文件夹
5.	实战(新建\提交\状态\修改)
5.1.	新建文件
命令：touch a.txt
命令：vim a.txt输入内容

5.3.	将文件添加到暂存区
命令：git add 文件名称   （暂时进库）
只是增加到栈空间（index）中，还没有添加到本地库中。初始化时没有这个index文件。
这还是一个新文件，需要将栈空间文件提交到本地仓库
5.4.	提交文件到本地库 
命令：git  commit
执行命令时需要填写提交日志
或者也可以直接带注释提交：git  commit  –m “注释内容”
5.5.	编辑
im a.txt 填入一行111111
ESC切换 ：wq!  退出
编辑并查看状态：
修改后,新增到栈空间：
添加文件：git add a.txt
git status（可以看到有在暂存区的文件）
提交更新：git commit -m "修改文件111111"
显示文件内容：cat a.txt
再重复以上步骤，修改提交3次(为接下来实验做准备)
6.	实战(查看日志\回退\穿梭\撤销)
6.1.	查看日志记录
查看文件日志：git log a.txt
日志比较多，可以enter下翻，q退出。
简洁版：
git log --pretty=oneline
6.2.	回退到历史版本
一次回退一个版本，一个^代表一个版本数量：git reset --hard HEAD^
 回退n次操作 ：git  reset  --hard HEAD~n
6.3.	版本穿梭
查看所有历史操作：git reflog a.txt
回到最新的版本：git reset --hard 47d1c0e（可以精确到版本号）
6.4.	撤销
vim修改增加一行AAAAAA后，没有add和commit ,进行撤销
撤销修改(还原原来的文件)：git  checkout  --  a.txt
7.	实战(删除)
7.1.	删除文件,删完提交
手动拷贝图片java.jpg到工作空间目录，并查看目录列表：ls -l
8.	实战(工作区\暂存区\版本库概念)
8.1.	理解工作区+版本库+暂存区（后一页）
工作区(Working Directory)：就是你电脑本地硬盘目录
版本库(Repository)：工作区有个隐藏目录.git，它就是Git的本地版本库
暂存区(stage) ：一般存放在"git目录"下的index文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。
Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。
 我们把文件往Git版本库里添加的时候，是分两步执行的：
第一步是用“git add”把文件纳入Git管理，实际是把本地文件修改添加到暂存区；
第二步是用“git commit”提交更改，实际上就是把暂存区的所有内容提交到当前分支 。
因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以commit就是往master分支上提交更改。
可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。一旦提交完后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的。即：nothing to commit (working directory clean)。
用“git diff HEAD -- filename”命令可以查看工作区和暂存区里面最新版本的区别。
新建过撤销未add： git checkout  -- 文件名
撤销已add未commit：先git  reset HEAD  文件名 再 git checkout -- 文件名
撤销已add已commit：git reset --hard HEAD^
9.	实战(分支)
9.1.	分支原理
系统上线后,又要修改bug,又要开发新的功能.
由于新功能没有开发完,所以需要建立分支,一边修改bug,一边开发新功能,最终合并.
9.2.	分支实操
总结：
1.master合并分支之后分支修改并不会更新master
2.
10.	实战(版本冲突))
10.1.	冲突产生
10.1.	冲突产生
冲突一般指同一个文件同一位置的代码，在两种版本合并时版本管理软件无法判断到底应该保留哪个版本，因此会提示该文件发生冲突，需要程序员来手工判断解决冲
10.2.	合并时冲突
程序合并时发生冲突系统会提示CONFLICT关键字，命令行后缀会进入MERGING状态，表示此时是解决冲突的状态。
10.3.	解决冲突
此时通过git diff 可以找到发生冲突的文件及冲突的内容。
然后修改冲突文件的内容，再次git add <file> 和git commit 提交后，后缀MERGING消失，说明冲突解决完成。
新建分支，切换分支：git checkout -b <分支名>
修改文件内容，并添加，提交：（同时修改第x行）
切换主分支：修改文件内容，并添加，提交：（同时修改第x行）
当把其他分支合并到主分支时出现冲突：
查看文件，冲突内容：
查看状态：
手动解决冲突，都保留：查看文件内容
添加，提交：解决冲突
解决冲突后查看文件状态
11.	Github简介
11.1.	是什么
github是一个git项目托管网站,主要提供基于git的版本托管服务
11.2.	能干嘛
github是一个基于git的代码托管平台， Git 并不像 SVN 那样有个中心服务器。目前我们使用到的 Git 命令都是在本地执行，如果你想通过 Git 分享你的代码或者与其他开发人员合作。
你就需要将数据放到一台其他开发人员能够连接的服务器上






















































